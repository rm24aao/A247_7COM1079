# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidyr)
library(ggcorrplot)

# Step 1: Load the dataset
data <- read.csv("real_estate_data.csv")

# Step 2: Data Cleaning
# Convert necessary columns to appropriate data types
data$Price <- as.numeric(data$Price)          # Price as numeric
data$Rooms <- as.factor(data$Rooms)           # Rooms as factor (categorical)
data$Method <- as.factor(data$Method)         # Method as factor (categorical)
data$Suburb <- as.factor(data$Suburb)         # Suburb as factor (categorical)
data$SellerG <- as.factor(data$SellerG)       # Seller agent as factor (categorical)
data$Date <- as.Date(data$Date, format = "%d/%m/%Y") # Date as Date type
data$Distance <- as.numeric(data$Distance)    # Distance as numeric

# Step 3: Data Exploration
# Check the first few rows and structure of the dataset
head(data)
str(data)

# Check summary statistics for numeric columns
summary(data)

# Step 4: Price Distribution - Histogram
ggplot(data, aes(x = Price)) +
  geom_histogram(binwidth = 50000, fill = "lightblue", color = "black", alpha = 0.7) +
  theme_minimal() +
  labs(title = "Price Distribution", x = "Price", y = "Count")

# Step 5: Price Distribution by Sale Method - Boxplot
ggplot(data, aes(x = Method, y = Price)) +
  geom_boxplot(fill = "lightblue", color = "black") +
  theme_minimal() +
  labs(title = "Price Distribution by Sale Method", x = "Sale Method", y = "Price") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Step 6: Price vs. Distance - Scatter Plot
ggplot(data, aes(x = Distance, y = Price)) +
  geom_point(color = "red", alpha = 0.6) +
  theme_minimal() +
  labs(title = "Price vs Distance", x = "Distance (km)", y = "Price")

# Step 7: Price by Number of Rooms - Boxplot
ggplot(data, aes(x = Rooms, y = Price)) +
  geom_boxplot(fill = "purple", color = "black") +
  theme_minimal() +
  labs(title = "Price Distribution by Number of Rooms", x = "Number of Rooms", y = "Price") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Step 8: Price by Suburb - Boxplot
ggplot(data, aes(x = Suburb, y = Price)) +
  geom_boxplot(fill = "lightgreen", color = "black") +
  theme_minimal() +
  labs(title = "Price Distribution by Suburb", x = "Suburb", y = "Price") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Step 9: Correlation Analysis - Numeric Variables
numeric_data <- data %>% select(Price, Distance)
correlation_matrix <- cor(numeric_data, use = "complete.obs")
print(correlation_matrix)

# Step 10: Correlation Heatmap
ggcorrplot(correlation_matrix, method = "circle", type = "upper", lab = TRUE)

# Step 11: Price Trend Over Time - Line Plot
ggplot(data, aes(x = Date, y = Price)) +
  geom_line(color = "blue") +
  theme_minimal() +
  labs(title = "Price Trend Over Time", x = "Date", y = "Price")

# Step 12: Sale Method Frequency - Bar Plot
ggplot(data, aes(x = Method)) +
  geom_bar(fill = "orange", color = "black") +
  theme_minimal() +
  labs(title = "Sale Method Frequency", x = "Sale Method", y = "Count")

# Step 13: Price by Seller Agent - Boxplot
ggplot(data, aes(x = SellerG, y = Price)) +
  geom_boxplot(fill = "lightcyan", color = "black") +
  theme_minimal() +
  labs(title = "Price Distribution by Seller Agent", x = "Seller Agent", y = "Price") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Step 14: Price Range Distribution - Bar Plot
data$PriceRange <- cut(data$Price, 
                       breaks = c(0, 500000, 1000000, 1500000, 2000000, Inf), 
                       labels = c("< 500k", "500k - 1M", "1M - 1.5M", "1.5M - 2M", "> 2M"))
ggplot(data, aes(x = PriceRange)) +
  geom_bar(fill = "lightyellow", color = "black") +
  theme_minimal() +
  labs(title = "Count of Properties by Price Range", x = "Price Range", y = "Count")

# Step 15: Create a summary of important features
summary_stats <- data %>%
  group_by(Suburb) %>%
  summarise(
    Average_Price = mean(Price, na.rm = TRUE),
    Median_Price = median(Price, na.rm = TRUE),
    Num_Properties = n(),
    Avg_Distance = mean(Distance, na.rm = TRUE)
  )

print(summary_stats)
